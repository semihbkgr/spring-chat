apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-chat
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spring-chat
  template:
    metadata:
      labels:
        app: spring-chat
    spec:
      containers:
        - name: spring-chat
          image: semihbkgr/spring-chat:1.0.0
          ports:
            - name: http
              containerPort: 9000
          env:
            - name: 'SERVER_PORT'
              value: '9000'
            - name: 'SPRING_REDIS_HOST'
              value: 'redis'
            - name: 'SPRING_REDIS_PORT'
              value: '6379'
          resources:
            requests:
              memory: '512Mi'
              cpu: '300m'
            limits:
              memory: '1Gi'
              cpu: '2'
---
apiVersion: v1
kind: Pod
metadata:
  name: redis
  labels:
    app: redis
spec:
  containers:
    - name: redis
      image: redis
      ports:
        - containerPort: 6379
      resources:
        requests:
          memory: '512Mi'
          cpu: '200m'
        limits:
          memory: '2Gi'
          cpu: '1'
---
apiVersion: v1
kind: Service
metadata:
  name: spring-chat
spec:
  selector:
    app: spring-chat
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 9000
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-chat
  annotations:
    nginx.org/websocket-services: "spring-chat"
spec:
  ingressClassName: nginx
  rules:
    - host: 'spring.examples.io'
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: spring-chat
                port:
                  number: 9000
